swagger: "2.0"

info:
  title: "Fanlens Model API"
  version: "4.0.0"
  description: '
Fanlens API for managing the prediction models and retrieving free form predictions.
For interacting with imported activities please switch to the [Activities API](/v3/activities/ui/).

## Concepts

The purpose of this API is to train "models" that can work with "[tagsets](/v3/activities/ui/#!/tagsets/get_tagsets)" and
generate predictions based on them.'

schemes:
  - https

basePath: /v4/model

securityDefinitions:
  jwt:
    type: apiKey
    name: Authorization
    in: header

security:
  - jwt: []

produces:
  - application/json
consumes:
  - application/json

paths:
  '/train':
    post:
      summary: Train a new model for a tagset
      description: If now sources are specified it will be trained on all sources
      tags: [model]
      parameters:
      - name: body
        in: body
        required: true
        schema:
          type: object
          required: [source_ids, tagset_id]
          properties:
            source_ids:
              type: array
              items:
                $ref: '#/definitions/SourceId'
              uniqueItems: true
              description: list of sources to use, empty list means all
            tagset_id:
              type: number
              format: int32
              description: the taset id to find, must be accessible by user
      - name: fast
        in: query
        type: boolean
        required: false
        default: true
        description: Reuse model parameters and only use data
      responses:
        202:
          description: Model creation has been initiated.
          schema:
            $ref: '#/definitions/Job'
        409:
          description: Model creation for this tagset is currently in progress, see job reference.
          schema:
            $ref: '#/definitions/Job'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  '/':
    get:
      summary: Get all models of user
      tags: [model]
      responses:
        200:
          description: Information about the trained model
          schema:
            type: object
            required: [models]
            properties:
              models:
                type: array
                items:
                  $ref: '#/definitions/Model'
                uniqueItems: true
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  '/{model_id}':
    get:
      summary: Get meta information about a trained model
      tags: [model]
      parameters:
      - $ref: '#/parameters/ModelId'
      responses:
        200:
          description: Information about the trained model
          schema:
            $ref: '#/definitions/Model'
        404:
          description: Model not associated to user
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /prediction:
    post:
      summary: Get prediction for a provided text based on the best model for source/tagset
      tags: [prediction]
      consumes: [application/json]
      parameters:
      - $ref: '#/parameters/ModelIdQuery'
      - name: body
        in: body
        required: true
        schema:
          type: object
          required: [text]
          properties:
            text:
              type: string
              minLength: 24
              maxLength: 7000
              description: The text to fetch prediction for. English only atm.
            source_ids:
              type: array
              items:
                $ref: '#/definitions/SourceId'
              uniqueItems: true
              description: list of sources to use, empty list means all
            tagset_id:
              type: number
              format: int32
              description: the tagset id to find, must be accessible by user
      responses:
        200:
          description: A prediction Bundle
          schema:
            type: object
            required: [prediction]
            properties:
              text:
                type: string
              prediction:
                $ref: '#/definitions/Prediction'
        404:
          description: Model not associated to user
          schema:
            $ref: '#/definitions/Error'
        400:
          description: Bad request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  '/search':
    post:
      summary: Get meta information about a trained model
      tags: [model]
      parameters:
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            source_ids:
              type: array
              items:
                $ref: '#/definitions/SourceId'
              uniqueItems: true
              description: list of sources to use, empty list means all
            tagset_id:
              type: number
              format: int32
              description: the tagset id to find, must be accessible by user
      responses:
        200:
          description: Information about the best trained model
          schema:
            $ref: '#/definitions/Model'
        400:
          description: No criterium specified
          schema:
            $ref: '#/definitions/Error'
        404:
          description: No model found for this query
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

parameters:
  ModelIdQuery:
    name: model_id
    in: query
    type: string
    format: uuid
    required: false
    description: The id of this model

  ModelId:
    name: model_id
    in: path
    type: string
    format: uuid
    required: true
    description: The id of this model

definitions:
  SourceId:
    type: integer
    format: int32

  Error:
    type: object
    properties:
      error:
        type: string

  Job:
    type: object
    required: [job]
    properties:
      job:
        type: string
        format: uuid
      url:
        type: string
        format: url
        description: You can get info about the currently running job or cancel it under this url

  Tag:
    description: Tags are arbitrary strings
    type: string
    minLength: 1
    maxLength: 32

  Tags:
    type: array
    description: A set of tags
    items:
      $ref: '#/definitions/Tag'
    uniqueItems: true

  TagSet:
    type: object
    description: A set of tags
    properties:
      id:
        type: integer
        description: Assigned by the system
      title:
        type: string
        format: string
        description: Human readable title of this tag set
      tags:
        $ref: '#/definitions/Tags'

  Source:
    type: object
    description: Source representation
    properties:
      id:
        type: integer
        description: Assigned by the system
      type:
        type: string
        description: Source type (forces specific data format)
        enum:
        - facebook
        - twitter
#        - crunchbase
        - generic
      uri:
        type: string
        format: url
        description: Canoncial URI of the source, e.g. Twitter account URI.
      slug:
        type: string
        minLength: 1
        maxLength: 128
        description: Identifier for the URI. Required for Twitter and Facebook sources.

  Model:
    type: object
    required: [id, trained_ts]
    properties:
      id:
        type: string
        format: uuid
        description: Assigned by the system
      trained_ts:
        type: string
        format: date-time
        description: The timestamp when this model was created
      score:
        type: number
        format: float
        minimum: 0.0
        maximum: 1.0
        description: The f1 score of the model, restricted access
      params:
        type: object
        description: The model parameters, restricted access
        additionalProperties:
          type: [string, number, boolean, object]
      tagset:
        $ref: '#/definitions/TagSet'
      sources:
        description: The sources this model is trained on
        type: array
        items:
          $ref: '#/definitions/Source'
        uniqueItems: true


  Prediction:
    type: object
    description: 'A dict object of the form "Tag: Predicted Score in %"'
    additionalProperties:
      type: number
      format: float
      minimum: 0.0
      maximum: 1.0
      description: Probability of prediction